---
name: kotary e2e testing
on: push
jobs:
  kind:
    runs-on: ubuntu-latest
    name: create cluster KinD  with (1.21,1.23) Kub version
    strategy:
      fail-fast: false
      matrix:
        kubernetes:
          - 1.21
          - 1.23
    steps:

      - name: checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Create cluster KinD
        uses: helm/kind-action@v1.5.0
        with:
          config: .github/KindConfig/kind-cluster-${{ matrix.kubernetes }}.yaml

      - name: testing cluster kinD
        run: | 
              kubectl cluster-info --context kind-chart-testing echo " current-context:" $(kubectl config current-context)
              kubectl get all --all-namespaces
                 
      - name: Setting up kubeconfig ENV for Github Action
        run: echo ::set-env name=KUBE_CONFIG_DATA::$(base64 -w 0 ~/.kube/config)
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
          
      - name: Set GOROOT
        run: echo "export GOROOT=/opt/hostedtoolcache/go/1.20/x64" >> $GITHUB_ENV
      
      -name: Deploy CRD
        run: kubectl apply -f artifacts/crd.yml

      - name: Deploy kotary operator
        run: kubectl apply -f artifacts/deployment.yml && kubectl get all -n kube-system
        
      - name: Create kotary ConfigMap
        run: kubectl -n kube-system create -f .github/KindConfig/ConfigMap.yaml
      - name: Create NS 'kotarytest' and add a ResourceQuota
        run: | 
          kubectl create ns kotarytest
          while  ! kubectl get pods -n kube-system | grep kotary | grep Running > /dev/null ; do     sleep 5;     echo "Waiting for pod to be Running"; done
          kubectl apply -f .github/KindConfig/QuotaClaim.yaml -n kotarytest
          kubectl get resourcequota -n kotarytest
          kubectl get quotaclaim -n kotarytest